{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","query","setQuery","setMovie","error","setError","loader","setLoader","onSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","Promise","reject","Title","Plot","Poster","imdbID","resolve","finally","htmlFor","type","id","placeholder","value","onChange","target","disabled","classNames","onClick","App","setMovies","find","movieId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ad50bb4.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { FormEvent, useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n  const [loader, setLoader] = useState(false);\n\n  const handleOnSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    setLoader(true);\n\n    getMovie(query)\n      .then(res => {\n        if ('Error' in res) {\n          return Promise.reject();\n        }\n\n        setMovie({\n          title: res.Title,\n          description: res.Plot,\n          imgUrl: res.Poster === 'N/A' ? (\n            'https://via.placeholder.com/360x270.png?text=no%20preview'\n          ) : (\n            res.Poster\n          ),\n          imdbUrl: `https://www.imdb.com/title/${res.imdbID}`,\n          imdbId: res.imdbID,\n        });\n\n        return Promise.resolve();\n      })\n      .catch(() => setError(true))\n      .finally(() => setLoader(false));\n  };\n\n  const handleAddMovie = () => {\n    if (movie) {\n      addMovie(movie);\n    }\n\n    setQuery('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleOnSubmit} className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={event => {\n                setQuery(event.target.value);\n                setError(false);\n              }}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              disabled={!query}\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': loader },\n              )}\n            >\n              {movie ? (\n                'Search again'\n              ) : (\n                'Find a Movie'\n              )}\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=ccb88a61';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    if (movies.find(movieId => movieId.imdbId === movie.imdbId)) {\n      return;\n    }\n\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}